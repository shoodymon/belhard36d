from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

# Bot –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–∞ –∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –æ—Ç–≤–µ—á–∞—Ç—å;
# Dispatcher –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è;
# Executor –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å.
# types –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —Ç–æ –µ—Å—Ç—å –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π.

API_TOKEN = '5959882859:AAHSwG_rho8W_e4oRi0Gvy4AL_v7Iv9Coz0'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def begin(messsage: types.Message):
    markup = InlineKeyboardMarkup()
    button_loan = InlineKeyboardButton('–û–Ω–ª–∞–π–Ω –∑–∞–π–º—ã', callback_data='button_loan')
    button_credit = InlineKeyboardButton('–ö—Ä–µ–¥–∏—Ç—ã', callback_data='button_credit')
    button_credit_card = InlineKeyboardButton('–ö—Ä–µ–¥–∏—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ã', callback_data='button_credit_card')
    markup.add(button_loan, button_credit, button_credit_card)
    await bot.send_message(messsage.chat.id, "–ü—Ä–∏–≤–µ—Ç!üëã\n–î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è\n–ú–µ–Ω—è –∑–æ–≤—É—Ç ‚Äì –ó–∞–π–º–µ—Ä-–±–æ—Ç.\n–Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Ç–µ–±—è —Å–∞–º—ã–µ –≤—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:", reply_markup=markup)

@dp.callback_query_handler(lambda loan: loan.data == 'button_loan')
async def button_loan(call: types.callback_query):

    await bot.answer_callback_query(call.id)
    await bot.send_message(call.message.chat.id,'–ó–∞–π–º—ã')

@dp.callback_query_handler(lambda credit: credit.data == 'button_credit')
async def button_credit(call: types.callback_query):

    await bot.answer_callback_query(call.id)
    await bot.send_message(call.message.chat.id,'Credit')

@dp.callback_query_handler(lambda credit_card: credit_card.data == 'button_credit_card')
async def button_credit_card(call: types.callback_query):

    await bot.answer_callback_query(call.id)
    await bot.send_message(call.message.chat.id,'Credit_card')

@dp.message_handler(commands=['new_start'])
async def begin_2(message: types.Message):
    markup_2 = InlineKeyboardMarkup(row_width=2)
    button_russia = InlineKeyboardButton('–†–æ—Å—Å–∏—è', callback_data='button_russia')
    button_kazakhstan = InlineKeyboardButton('–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', callback_data='button_kazakhstan')
    button_belarus = InlineKeyboardButton('–ë–µ–ª–∞—Ä—É—Å—å', callback_data='button_belarus')
    button_ukraine = InlineKeyboardButton('–£–∫—Ä–∞–∏–Ω–∞', callback_data='button_ukraine')
    markup_2.add(button_russia, button_kazakhstan, button_belarus, button_ukraine)
    await bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ!\n–î–∞–≤–∞–π –ø—Ä–∏—Å—Ç—É–ø–∏–ºüòä\n–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã —Ç—ã —è–≤–ª—è–µ—à—å—Å—è?", reply_markup=markup_2)

@dp.callback_query_handler(lambda russia: russia.data == 'button_russia')
async def button_russia(call: types.callback_query):

    await bot.answer_callback_query(call.id)
    await bot.send_message(call.message.chat.id,'Russia')

@dp.callback_query_handler(lambda kazakhstan: kazakhstan.data == 'button_kazakhstan')
async def button_kazakhstan(call: types.callback_query):

    await bot.answer_callback_query(call.id)
    await bot.send_message(call.message.chat.id,'Kazakhstan')

@dp.callback_query_handler(lambda belarus: belarus.data == 'button_belarus')
async def button_belarus(call: types.callback_query):

    await bot.answer_callback_query(call.id)
    await bot.send_message(call.message.chat.id,'Belarus')

@dp.callback_query_handler(lambda ukraine: ukraine.data == 'button_ukraine')
async def button_ukraine(call: types.callback_query):

    await bot.answer_callback_query(call.id)
    await bot.send_message(call.message.chat.id,'Ukraine')

executor.start_polling(dp)